{"remainingRequest":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/babel-loader/lib/index.js!/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/src/components/Reasons/Reason1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/src/components/Reasons/Reason1.vue","mtime":1587454474786},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICdsZWFmbGV0L2Rpc3QvbGVhZmxldC5jc3MnOwppbXBvcnQgeyBMTWFwIH0gZnJvbSAndnVlMi1sZWFmbGV0JzsKaW1wb3J0IHsgSW5mb0NvbnRyb2wsIFJlZmVyZW5jZUNoYXJ0LCBDaG9yb3BsZXRoTGF5ZXIgfSBmcm9tICd2dWUtY2hvcm9wbGV0aCc7CmltcG9ydCB7IGdlb2pzb24gfSBmcm9tICcuLi8uLi9hc3NldHMvY291bnRyaWVzJzsKaW1wb3J0IHsgbmF0aW9uYWxJbnZlc3REYXRhIH0gZnJvbSAnLi4vLi4vYXNzZXRzL1dFSW52ZXN0JzsKaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTE1hcDogTE1hcCwKICAgICdsLWluZm8tY29udHJvbCc6IEluZm9Db250cm9sLAogICAgJ2wtcmVmZXJlbmNlLWNoYXJ0JzogUmVmZXJlbmNlQ2hhcnQsCiAgICAnbC1jaG9yb3BsZXRoLWxheWVyJzogQ2hvcm9wbGV0aExheWVyLAogICAgYXBleGNoYXJ0OiBWdWVBcGV4Q2hhcnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZ2VvanNvbjogZ2VvanNvbiwKICAgICAgbmF0aW9uYWxJbnZlc3REYXRhOiBuYXRpb25hbEludmVzdERhdGEsCiAgICAgIGNvbG9yU2NhbGU6IFsiZTdkMDkwIiwgImU5YWU3YiIsICJkZTcwNjIiXSwKICAgICAgdmFsdWU6IHsKICAgICAgICBrZXk6ICJpbnZlc3QiLAogICAgICAgIG1ldHJpYzogIiUgR0RQIgogICAgICB9LAogICAgICBleHRyYVZhbHVlczogW3sKICAgICAgICBrZXk6ICJjb3VudHJ5X25hbWUiLAogICAgICAgIG1ldHJpYzogIiIKICAgICAgfV0sCiAgICAgIG1hcE9wdGlvbnM6IHsKICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w6IGZhbHNlCiAgICAgIH0sCiAgICAgIGN1cnJlbnRTdHJva2VDb2xvcjogJzNkMzIxMycsCiAgICAgIHR5cGU6ICJzdGFja2VkYmFyMmQiLAogICAgICB3aWR0aDogIjEwMCUiLAogICAgICBoZWlnaHQ6ICIxMDAlIiwKICAgICAgZGF0YUZvcm1hdDogImpzb24iLAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ0ZhbWlseSBFeHBlbmRpdHVyZScsCiAgICAgICAgZGF0YTogWzEzMjE2MSwgOTkzNzgsIDcwOTM5LCA1ODQ2NCwgNDI4OTIsIDM2NDAyLCAyNTQ3OSwgMjQ4NjIsIDIyODEyLCAyMjYwMiwgMTg5MDksIDE4NDIyLCAxNjg2MywgMTY3MDhdCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnQXZlcmFnZSBTYWxhcnknLAogICAgICAgIGRhdGE6IFstNTAzMDAsIC00MDg4MCwgLTU5NzcwLCAtNjMwODAsIC05NDYwLCAtNTMyMzAsIC0xMDU5MCwgLTQxNzcwLCAtOTE4MCwgLTQ0OTQwLCAtMjAyMCwgLTM4NDAsIC0yODAwLCAtNDEwODBdCiAgICAgIH1dLAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICBjaGFydDogewogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBoZWlnaHQ6IDQ0MCwKICAgICAgICAgIHN0YWNrZWQ6IHRydWUKICAgICAgICB9LAogICAgICAgIGNvbG9yczogWycjMDA4RkZCJywgJyNGRjQ1NjAnXSwKICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgYmFyOiB7CiAgICAgICAgICAgIGhvcml6b250YWw6IHRydWUsCiAgICAgICAgICAgIGJhckhlaWdodDogJzgwJScKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBzdHJva2U6IHsKICAgICAgICAgIHdpZHRoOiAxLAogICAgICAgICAgY29sb3JzOiBbIiNmZmYiXQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgeGF4aXM6IHsKICAgICAgICAgICAgbGluZXM6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5YXhpczogewogICAgICAgICAgbWluOiAtMTMyMjAwLAogICAgICAgICAgbWF4OiAxMzIyMDAsCiAgICAgICAgICB0aXRsZTogey8vIHRleHQ6ICdjb3VudHJ5JywKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNoYXJlZDogZmFsc2UsCiAgICAgICAgICB4OiB7CiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHZhbCkgewogICAgICAgICAgICAgIHJldHVybiB2YWw7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB5OiB7CiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHZhbCkgewogICAgICAgICAgICAgIHJldHVybiAiJCAiICsgTWF0aC5hYnModmFsKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICdGYW1pbHkgRXhwZW5kaXR1cmUgb24gRWR1Y2F0aW9uIFZTIEF2ZXJhZ2UgU2FsYXJ5JwogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIGNhdGVnb3JpZXM6IFsnSEsnLCAnVUFFJywgJ1NpbmdhcG9yZScsICdVU0EnLCAnQ2hpbmEnLCAnQXVzdHJhbGlhJywgJ01hbGF5c2lhJywgJ1VLJywgJ01leGljbycsICdDYW5hZGEnLCAnSW5kaWEnLCAnSW5kb25lc2lhJywgJ0VneXB0JywgJ0ZyYW5jZSddLAogICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdGV4dDogJyQgVVNEJwogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcih2YWwpIHsKICAgICAgICAgICAgICByZXR1cm4gIiQgIiArIE1hdGguYWJzKE1hdGgucm91bmQodmFsKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["Reason1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n<!-- choropleth map of national investment in education (compare western europe and eastern asia)-->\n  <l-map \n  :center=\"[50.8182, 40.2275]\" \n  :zoom=\"3\" \n  style=\"height: 500px;\" \n  :options=\"mapOptions\">\n    <l-choropleth-layer \n      :data=\"nationalInvestData\" \n      titleKey=\"time\" \n      idKey=\"country_name\" \n      :value=\"value\" \n      :extraValues=\"extraValues\" \n      geojsonIdKey=\"ADMIN\" \n      :geojson=\"geojson\" \n      :colorScale=\"colorScale\">\n        <template slot-scope=\"props\">\n          <l-info-control \n            :item=\"props.currentItem\" \n            :unit=\"props.unit\" \n            title=\"National Investment\" \n            placeholder=\"Hover over a country\"/>\n          <l-reference-chart \n            title=\"National Investment\" \n            :colorScale=\"colorScale\" \n            :min=\"props.min\" \n            :max=\"props.max\" \n            position=\"topright\"/>\n        </template>\n    </l-choropleth-layer>\n</l-map>\n<!-- chart of average salary VS family expenditure on education -->\n<apexchart type=\"bar\" height=\"440\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n</div>\n</template>\n\n<script>\nimport 'leaflet/dist/leaflet.css';\nimport {LMap} from 'vue2-leaflet';\nimport { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth';\nimport {geojson} from '../../assets/countries';\nimport {nationalInvestData} from '../../assets/WEInvest';\nimport VueApexCharts from 'vue-apexcharts';\n\nexport default {\n    components: { \n    LMap,\n    'l-info-control': InfoControl, \n    'l-reference-chart': ReferenceChart, \n    'l-choropleth-layer': ChoroplethLayer,\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      geojson,\n      nationalInvestData,\n      colorScale: [\"e7d090\", \"e9ae7b\", \"de7062\"],\n      value: {\n        key: \"invest\",\n        metric: \"% GDP\"\n      },\n      extraValues: [{\n        key: \"country_name\",\n        metric: \"\"\n      }],\n      mapOptions: {\n        attributionControl: false\n      },\n      currentStrokeColor: '3d3213',\n      type: \"stackedbar2d\",\n      width: \"100%\",\n      height: \"100%\",\n      dataFormat: \"json\",\n      series: [{\n            name: 'Family Expenditure',\n            data: [132161,99378,70939,58464,42892,36402,25479,24862,22812,22602,18909,18422,16863,16708\n            ]\n          },\n          {\n            name: 'Average Salary',\n            data: [-50300,-40880,-59770,-63080,-9460,-53230,-10590,-41770,-9180,-44940,-2020,-3840,-2800,-41080\n            ]\n          }\n          ],\n          chartOptions: {\n            chart: {\n              type: 'bar',\n              height: 440,\n              stacked: true\n            },\n            colors: ['#008FFB', '#FF4560'],\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                barHeight: '80%',\n            \n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              width: 1,\n              colors: [\"#fff\"]\n            },\n            \n            grid: {\n              xaxis: {\n                lines: {\n                  show: false\n                }\n              }\n            },\n            yaxis: {\n              min: -132200,\n              max: 132200,\n              title: {\n                // text: 'country',\n              },\n            },\n            tooltip: {\n              shared: false,\n              x: {\n                formatter: function (val) {\n                  return val\n                }\n              },\n              y: {\n                formatter: function (val) {\n                  return \"$ \"+Math.abs(val)\n                }\n              }\n            },\n            title: {\n              text: 'Family Expenditure on Education VS Average Salary'\n            },\n            xaxis: {\n              categories: ['HK', 'UAE','Singapore','USA','China','Australia','Malaysia','UK','Mexico','Canada','India',\n              'Indonesia','Egypt','France'\n              ],\n              title: {\n                text: '$ USD'\n              },\n              labels: {\n                formatter: function (val) {\n                  return \"$ \" + Math.abs(Math.round(val)) \n                }\n              }\n            },\n          },\n          \n    }\n  },\n}\n</script>\n\n\n<style>\n\n</style>"],"sourceRoot":"src/components/Reasons"}]}