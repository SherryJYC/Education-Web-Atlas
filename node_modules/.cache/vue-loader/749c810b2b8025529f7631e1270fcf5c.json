{"remainingRequest":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/src/components/Reason1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/src/components/Reason1.vue","mtime":1586313986826},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sherry/Desktop/Git/Multi-Media-Carto-Project-2020/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAnbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzJzsKaW1wb3J0IHtMTWFwfSBmcm9tICd2dWUyLWxlYWZsZXQnOwppbXBvcnQgeyBJbmZvQ29udHJvbCwgUmVmZXJlbmNlQ2hhcnQsIENob3JvcGxldGhMYXllciB9IGZyb20gJ3Z1ZS1jaG9yb3BsZXRoJzsKaW1wb3J0IHtnZW9qc29ufSBmcm9tICcuLi9hc3NldHMvY291bnRyaWVzJzsKaW1wb3J0IHtuYXRpb25hbEludmVzdERhdGF9IGZyb20gJy4uL2Fzc2V0cy9XRUludmVzdCc7CmltcG9ydCBWdWVBcGV4Q2hhcnRzIGZyb20gJ3Z1ZS1hcGV4Y2hhcnRzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsgCiAgICBMTWFwLAogICAgJ2wtaW5mby1jb250cm9sJzogSW5mb0NvbnRyb2wsIAogICAgJ2wtcmVmZXJlbmNlLWNoYXJ0JzogUmVmZXJlbmNlQ2hhcnQsIAogICAgJ2wtY2hvcm9wbGV0aC1sYXllcic6IENob3JvcGxldGhMYXllciwKICAgIGFwZXhjaGFydDogVnVlQXBleENoYXJ0cwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdlb2pzb24sCiAgICAgIG5hdGlvbmFsSW52ZXN0RGF0YSwKICAgICAgY29sb3JTY2FsZTogWyJlN2QwOTAiLCAiZTlhZTdiIiwgImRlNzA2MiJdLAogICAgICB2YWx1ZTogewogICAgICAgIGtleTogImludmVzdCIsCiAgICAgICAgbWV0cmljOiAiJSBHRFAiCiAgICAgIH0sCiAgICAgIGV4dHJhVmFsdWVzOiBbewogICAgICAgIGtleTogImNvdW50cnlfbmFtZSIsCiAgICAgICAgbWV0cmljOiAiIgogICAgICB9XSwKICAgICAgbWFwT3B0aW9uczogewogICAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2UKICAgICAgfSwKICAgICAgY3VycmVudFN0cm9rZUNvbG9yOiAnM2QzMjEzJywKICAgICAgdHlwZTogInN0YWNrZWRiYXIyZCIsCiAgICAgIHdpZHRoOiAiMTAwJSIsCiAgICAgIGhlaWdodDogIjEwMCUiLAogICAgICBkYXRhRm9ybWF0OiAianNvbiIsCiAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogJ0ZhbWlseSBFeHBlbmRpdHVyZScsCiAgICAgICAgICAgIGRhdGE6IFsxMzIxNjEsOTkzNzgsNzA5MzksNTg0NjQsNDI4OTIsMzY0MDIsMjU0NzksMjQ4NjIsMjI4MTIsMjI2MDIsMTg5MDksMTg0MjIsMTY4NjMsMTY3MDgKICAgICAgICAgICAgXQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ0F2ZXJhZ2UgU2FsYXJ5JywKICAgICAgICAgICAgZGF0YTogWy01MDMwMCwtNDA4ODAsLTU5NzcwLC02MzA4MCwtOTQ2MCwtNTMyMzAsLTEwNTkwLC00MTc3MCwtOTE4MCwtNDQ5NDAsLTIwMjAsLTM4NDAsLTI4MDAsLTQxMDgwCiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICBoZWlnaHQ6IDQ0MCwKICAgICAgICAgICAgICBzdGFja2VkOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNvbG9yczogWycjMDA4RkZCJywgJyNGRjQ1NjAnXSwKICAgICAgICAgICAgcGxvdE9wdGlvbnM6IHsKICAgICAgICAgICAgICBiYXI6IHsKICAgICAgICAgICAgICAgIGhvcml6b250YWw6IHRydWUsCiAgICAgICAgICAgICAgICBiYXJIZWlnaHQ6ICc4MCUnLAogICAgICAgICAgICAKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgICAgd2lkdGg6IDEsCiAgICAgICAgICAgICAgY29sb3JzOiBbIiNmZmYiXQogICAgICAgICAgICB9LAogICAgICAgICAgICAKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgICBsaW5lczogewogICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgICBtaW46IC0xMzIyMDAsCiAgICAgICAgICAgICAgbWF4OiAxMzIyMDAsCiAgICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICAgIC8vIHRleHQ6ICdjb3VudHJ5JywKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgc2hhcmVkOiBmYWxzZSwKICAgICAgICAgICAgICB4OiB7CiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgeTogewogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiAiJCAiK01hdGguYWJzKHZhbCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgdGV4dDogJ0ZhbWlseSBFeHBlbmRpdHVyZSBvbiBFZHVjYXRpb24gVlMgQXZlcmFnZSBTYWxhcnknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgY2F0ZWdvcmllczogWydISycsICdVQUUnLCdTaW5nYXBvcmUnLCdVU0EnLCdDaGluYScsJ0F1c3RyYWxpYScsJ01hbGF5c2lhJywnVUsnLCdNZXhpY28nLCdDYW5hZGEnLCdJbmRpYScsCiAgICAgICAgICAgICAgJ0luZG9uZXNpYScsJ0VneXB0JywnRnJhbmNlJwogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICAgIHRleHQ6ICckIFVTRCcKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiAiJCAiICsgTWF0aC5hYnMoTWF0aC5yb3VuZCh2YWwpKSAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgCiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["Reason1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Reason1.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n<!-- choropleth map of national investment in education (compare western europe and eastern asia)-->\n  <l-map \n  :center=\"[50.8182, 40.2275]\" \n  :zoom=\"3\" \n  style=\"height: 500px;\" \n  :options=\"mapOptions\">\n    <l-choropleth-layer \n      :data=\"nationalInvestData\" \n      titleKey=\"time\" \n      idKey=\"country_name\" \n      :value=\"value\" \n      :extraValues=\"extraValues\" \n      geojsonIdKey=\"ADMIN\" \n      :geojson=\"geojson\" \n      :colorScale=\"colorScale\">\n        <template slot-scope=\"props\">\n          <l-info-control \n            :item=\"props.currentItem\" \n            :unit=\"props.unit\" \n            title=\"National Investment\" \n            placeholder=\"Hover over a country\"/>\n          <l-reference-chart \n            title=\"National Investment\" \n            :colorScale=\"colorScale\" \n            :min=\"props.min\" \n            :max=\"props.max\" \n            position=\"topright\"/>\n        </template>\n    </l-choropleth-layer>\n</l-map>\n<!-- chart of average salary VS family expenditure on education -->\n<apexchart type=\"bar\" height=\"440\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n</div>\n</template>\n\n<script>\nimport 'leaflet/dist/leaflet.css';\nimport {LMap} from 'vue2-leaflet';\nimport { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth';\nimport {geojson} from '../assets/countries';\nimport {nationalInvestData} from '../assets/WEInvest';\nimport VueApexCharts from 'vue-apexcharts';\n\nexport default {\n    components: { \n    LMap,\n    'l-info-control': InfoControl, \n    'l-reference-chart': ReferenceChart, \n    'l-choropleth-layer': ChoroplethLayer,\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      geojson,\n      nationalInvestData,\n      colorScale: [\"e7d090\", \"e9ae7b\", \"de7062\"],\n      value: {\n        key: \"invest\",\n        metric: \"% GDP\"\n      },\n      extraValues: [{\n        key: \"country_name\",\n        metric: \"\"\n      }],\n      mapOptions: {\n        attributionControl: false\n      },\n      currentStrokeColor: '3d3213',\n      type: \"stackedbar2d\",\n      width: \"100%\",\n      height: \"100%\",\n      dataFormat: \"json\",\n      series: [{\n            name: 'Family Expenditure',\n            data: [132161,99378,70939,58464,42892,36402,25479,24862,22812,22602,18909,18422,16863,16708\n            ]\n          },\n          {\n            name: 'Average Salary',\n            data: [-50300,-40880,-59770,-63080,-9460,-53230,-10590,-41770,-9180,-44940,-2020,-3840,-2800,-41080\n            ]\n          }\n          ],\n          chartOptions: {\n            chart: {\n              type: 'bar',\n              height: 440,\n              stacked: true\n            },\n            colors: ['#008FFB', '#FF4560'],\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                barHeight: '80%',\n            \n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              width: 1,\n              colors: [\"#fff\"]\n            },\n            \n            grid: {\n              xaxis: {\n                lines: {\n                  show: false\n                }\n              }\n            },\n            yaxis: {\n              min: -132200,\n              max: 132200,\n              title: {\n                // text: 'country',\n              },\n            },\n            tooltip: {\n              shared: false,\n              x: {\n                formatter: function (val) {\n                  return val\n                }\n              },\n              y: {\n                formatter: function (val) {\n                  return \"$ \"+Math.abs(val)\n                }\n              }\n            },\n            title: {\n              text: 'Family Expenditure on Education VS Average Salary'\n            },\n            xaxis: {\n              categories: ['HK', 'UAE','Singapore','USA','China','Australia','Malaysia','UK','Mexico','Canada','India',\n              'Indonesia','Egypt','France'\n              ],\n              title: {\n                text: '$ USD'\n              },\n              labels: {\n                formatter: function (val) {\n                  return \"$ \" + Math.abs(Math.round(val)) \n                }\n              }\n            },\n          },\n          \n    }\n  },\n}\n</script>\n\n\n<style>\n\n</style>"]}]}